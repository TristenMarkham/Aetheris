{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useConfirmation.js\nimport { useState, useCallback } from 'react';\nexport const useConfirmation = (userName, companyName) => {\n  _s();\n  const [activeConfirmation, setActiveConfirmation] = useState(null);\n  const [pendingConfirmations, setPendingConfirmations] = useState(new Map());\n\n  // Process confirmation responses (yes/no/corrections)\n  const processConfirmationResponse = useCallback(async (message, confirmationId = null) => {\n    const messageLower = message.toLowerCase().trim();\n    const confirmKeywords = ['yes', 'confirm', 'ok', 'correct', 'looks good', 'approve', 'yep', 'yeah', 'sure', 'affirmative', 'add it', 'go ahead', 'proceed'];\n    const cancelKeywords = ['no', 'cancel', 'wrong', 'incorrect', 'stop', 'nope', 'not right', 'abort'];\n    const correctionPatterns = ['actually', 'change', 'update', 'fix', 'should be', 'meant to', 'correct'];\n    const isConfirm = confirmKeywords.some(keyword => messageLower.includes(keyword));\n    const isCancel = cancelKeywords.some(keyword => messageLower.includes(keyword));\n    const isCorrection = correctionPatterns.some(pattern => messageLower.includes(pattern));\n\n    // For now, return a simple response - you can implement full logic later\n    if (!isConfirm && !isCancel) {\n      return null; // Not a confirmation response\n    }\n\n    // Clear active confirmation\n    setActiveConfirmation(null);\n    return {\n      type: isConfirm ? 'confirmed' : 'cancelled',\n      message: isConfirm ? 'Confirmed' : 'Cancelled'\n    };\n  }, [activeConfirmation, userName, companyName]);\n\n  // Set a new confirmation\n  const setConfirmation = useCallback(confirmation => {\n    setActiveConfirmation(confirmation);\n  }, []);\n\n  // Clear current confirmation\n  const clearConfirmation = useCallback(() => {\n    setActiveConfirmation(null);\n  }, []);\n  return {\n    activeConfirmation,\n    processConfirmationResponse,\n    setConfirmation: setConfirmation,\n    clearConfirmation\n  };\n};\n_s(useConfirmation, \"sqQoxQujhULkYPSM6nQ5jCvDZLk=\");","map":{"version":3,"names":["useState","useCallback","useConfirmation","userName","companyName","_s","activeConfirmation","setActiveConfirmation","pendingConfirmations","setPendingConfirmations","Map","processConfirmationResponse","message","confirmationId","messageLower","toLowerCase","trim","confirmKeywords","cancelKeywords","correctionPatterns","isConfirm","some","keyword","includes","isCancel","isCorrection","pattern","type","setConfirmation","confirmation","clearConfirmation"],"sources":["C:/Users/onetr/OneDrive/Desktop/universal-business-platform/universal-business-platform/frontend/src/hooks/useConfirmation.js"],"sourcesContent":["// src/hooks/useConfirmation.js\r\nimport { useState, useCallback } from 'react';\r\n\r\nexport const useConfirmation = (userName, companyName) => {\r\n  const [activeConfirmation, setActiveConfirmation] = useState(null);\r\n  const [pendingConfirmations, setPendingConfirmations] = useState(new Map());\r\n\r\n  // Process confirmation responses (yes/no/corrections)\r\n  const processConfirmationResponse = useCallback(async (message, confirmationId = null) => {\r\n    const messageLower = message.toLowerCase().trim();\r\n    \r\n    const confirmKeywords = ['yes', 'confirm', 'ok', 'correct', 'looks good', 'approve', 'yep', 'yeah', 'sure', 'affirmative', 'add it', 'go ahead', 'proceed'];\r\n    const cancelKeywords = ['no', 'cancel', 'wrong', 'incorrect', 'stop', 'nope', 'not right', 'abort'];\r\n    const correctionPatterns = ['actually', 'change', 'update', 'fix', 'should be', 'meant to', 'correct'];\r\n    \r\n    const isConfirm = confirmKeywords.some(keyword => messageLower.includes(keyword));\r\n    const isCancel = cancelKeywords.some(keyword => messageLower.includes(keyword));\r\n    const isCorrection = correctionPatterns.some(pattern => messageLower.includes(pattern));\r\n    \r\n    // For now, return a simple response - you can implement full logic later\r\n    if (!isConfirm && !isCancel) {\r\n      return null; // Not a confirmation response\r\n    }\r\n    \r\n    // Clear active confirmation\r\n    setActiveConfirmation(null);\r\n    \r\n    return {\r\n      type: isConfirm ? 'confirmed' : 'cancelled',\r\n      message: isConfirm ? 'Confirmed' : 'Cancelled'\r\n    };\r\n  }, [activeConfirmation, userName, companyName]);\r\n\r\n  // Set a new confirmation\r\n  const setConfirmation = useCallback((confirmation) => {\r\n    setActiveConfirmation(confirmation);\r\n  }, []);\r\n\r\n  // Clear current confirmation\r\n  const clearConfirmation = useCallback(() => {\r\n    setActiveConfirmation(null);\r\n  }, []);\r\n\r\n  return {\r\n    activeConfirmation,\r\n    processConfirmationResponse,\r\n    setConfirmation: setConfirmation,\r\n    clearConfirmation\r\n  };\r\n};"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,OAAO,MAAMC,eAAe,GAAGA,CAACC,QAAQ,EAAEC,WAAW,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACQ,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGT,QAAQ,CAAC,IAAIU,GAAG,CAAC,CAAC,CAAC;;EAE3E;EACA,MAAMC,2BAA2B,GAAGV,WAAW,CAAC,OAAOW,OAAO,EAAEC,cAAc,GAAG,IAAI,KAAK;IACxF,MAAMC,YAAY,GAAGF,OAAO,CAACG,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;IAEjD,MAAMC,eAAe,GAAG,CAAC,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,YAAY,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,CAAC;IAC3J,MAAMC,cAAc,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,OAAO,CAAC;IACnG,MAAMC,kBAAkB,GAAG,CAAC,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,EAAE,UAAU,EAAE,SAAS,CAAC;IAEtG,MAAMC,SAAS,GAAGH,eAAe,CAACI,IAAI,CAACC,OAAO,IAAIR,YAAY,CAACS,QAAQ,CAACD,OAAO,CAAC,CAAC;IACjF,MAAME,QAAQ,GAAGN,cAAc,CAACG,IAAI,CAACC,OAAO,IAAIR,YAAY,CAACS,QAAQ,CAACD,OAAO,CAAC,CAAC;IAC/E,MAAMG,YAAY,GAAGN,kBAAkB,CAACE,IAAI,CAACK,OAAO,IAAIZ,YAAY,CAACS,QAAQ,CAACG,OAAO,CAAC,CAAC;;IAEvF;IACA,IAAI,CAACN,SAAS,IAAI,CAACI,QAAQ,EAAE;MAC3B,OAAO,IAAI,CAAC,CAAC;IACf;;IAEA;IACAjB,qBAAqB,CAAC,IAAI,CAAC;IAE3B,OAAO;MACLoB,IAAI,EAAEP,SAAS,GAAG,WAAW,GAAG,WAAW;MAC3CR,OAAO,EAAEQ,SAAS,GAAG,WAAW,GAAG;IACrC,CAAC;EACH,CAAC,EAAE,CAACd,kBAAkB,EAAEH,QAAQ,EAAEC,WAAW,CAAC,CAAC;;EAE/C;EACA,MAAMwB,eAAe,GAAG3B,WAAW,CAAE4B,YAAY,IAAK;IACpDtB,qBAAqB,CAACsB,YAAY,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,iBAAiB,GAAG7B,WAAW,CAAC,MAAM;IAC1CM,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLD,kBAAkB;IAClBK,2BAA2B;IAC3BiB,eAAe,EAAEA,eAAe;IAChCE;EACF,CAAC;AACH,CAAC;AAACzB,EAAA,CA9CWH,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
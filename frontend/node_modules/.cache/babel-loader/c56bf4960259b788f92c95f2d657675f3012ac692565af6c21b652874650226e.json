{"ast":null,"code":"\"use strict\";\n\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChatCompletionStoreMessagesPage = exports.Messages = void 0;\nconst resource_1 = require(\"../../../resource.js\");\nconst core_1 = require(\"../../../core.js\");\nconst completions_1 = require(\"./completions.js\");\nObject.defineProperty(exports, \"ChatCompletionStoreMessagesPage\", {\n  enumerable: true,\n  get: function () {\n    return completions_1.ChatCompletionStoreMessagesPage;\n  }\n});\nclass Messages extends resource_1.APIResource {\n  list(completionId, query = {}, options) {\n    if ((0, core_1.isRequestOptions)(query)) {\n      return this.list(completionId, {}, query);\n    }\n    return this._client.getAPIList(`/chat/completions/${completionId}/messages`, completions_1.ChatCompletionStoreMessagesPage, {\n      query,\n      ...options\n    });\n  }\n}\nexports.Messages = Messages;","map":{"version":3,"names":["resource_1","require","core_1","completions_1","Object","defineProperty","exports","enumerable","get","ChatCompletionStoreMessagesPage","Messages","APIResource","list","completionId","query","options","isRequestOptions","_client","getAPIList"],"sources":["C:\\Users\\onetr\\OneDrive\\Desktop\\universal-business-platform\\node_modules\\openai\\src\\resources\\chat\\completions\\messages.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../resource';\nimport { isRequestOptions } from '../../../core';\nimport * as Core from '../../../core';\nimport * as CompletionsAPI from './completions';\nimport { ChatCompletionStoreMessagesPage } from './completions';\nimport { type CursorPageParams } from '../../../pagination';\n\nexport class Messages extends APIResource {\n  /**\n   * Get the messages in a stored chat completion. Only Chat Completions that have\n   * been created with the `store` parameter set to `true` will be returned.\n   *\n   * @example\n   * ```ts\n   * // Automatically fetches more pages as needed.\n   * for await (const chatCompletionStoreMessage of client.chat.completions.messages.list(\n   *   'completion_id',\n   * )) {\n   *   // ...\n   * }\n   * ```\n   */\n  list(\n    completionId: string,\n    query?: MessageListParams,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<ChatCompletionStoreMessagesPage, CompletionsAPI.ChatCompletionStoreMessage>;\n  list(\n    completionId: string,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<ChatCompletionStoreMessagesPage, CompletionsAPI.ChatCompletionStoreMessage>;\n  list(\n    completionId: string,\n    query: MessageListParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<ChatCompletionStoreMessagesPage, CompletionsAPI.ChatCompletionStoreMessage> {\n    if (isRequestOptions(query)) {\n      return this.list(completionId, {}, query);\n    }\n    return this._client.getAPIList(\n      `/chat/completions/${completionId}/messages`,\n      ChatCompletionStoreMessagesPage,\n      { query, ...options },\n    );\n  }\n}\n\nexport interface MessageListParams extends CursorPageParams {\n  /**\n   * Sort order for messages by timestamp. Use `asc` for ascending order or `desc`\n   * for descending order. Defaults to `asc`.\n   */\n  order?: 'asc' | 'desc';\n}\n\nexport declare namespace Messages {\n  export { type MessageListParams as MessageListParams };\n}\n\nexport { ChatCompletionStoreMessagesPage };\n"],"mappings":";;AAAA;;;;;AAEA,MAAAA,UAAA,GAAAC,OAAA;AACA,MAAAC,MAAA,GAAAD,OAAA;AAGA,MAAAE,aAAA,GAAAF,OAAA;AAuDSG,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAvDAL,aAAA,CAAAM,+BAA+B;EAAA;AAAA;AAGxC,MAAaC,QAAS,SAAQV,UAAA,CAAAW,WAAW;EAwBvCC,IAAIA,CACFC,YAAoB,EACpBC,KAAA,GAAiD,EAAE,EACnDC,OAA6B;IAE7B,IAAI,IAAAb,MAAA,CAAAc,gBAAgB,EAACF,KAAK,CAAC,EAAE;MAC3B,OAAO,IAAI,CAACF,IAAI,CAACC,YAAY,EAAE,EAAE,EAAEC,KAAK,CAAC;;IAE3C,OAAO,IAAI,CAACG,OAAO,CAACC,UAAU,CAC5B,qBAAqBL,YAAY,WAAW,EAC5CV,aAAA,CAAAM,+BAA+B,EAC/B;MAAEK,KAAK;MAAE,GAAGC;IAAO,CAAE,CACtB;EACH;;AArCFT,OAAA,CAAAI,QAAA,GAAAA,QAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
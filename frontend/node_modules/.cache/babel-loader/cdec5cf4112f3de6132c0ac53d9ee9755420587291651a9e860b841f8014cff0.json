{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useBusinessData.js - Complete File with Debug Logging\nimport { useState, useEffect, useCallback } from 'react';\nconst API_BASE = process.env.REACT_APP_API_URL || 'http://localhost:3000';\nexport const useBusinessData = () => {\n  _s();\n  var _businessData$clients, _businessData$platfor, _businessData$sites, _businessData$clients2, _businessData$platfor2;\n  const [businessData, setBusinessData] = useState({\n    employees: [],\n    // Default to empty array\n    clients: [],\n    // Default to empty array\n    sites: [],\n    // Default to empty array\n    companyInfo: {},\n    platformModules: [],\n    realTimeMetrics: {}\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // SAFE: Helper function to ensure arrays exist\n  const safeArrayFilter = (array, filterFn) => {\n    return Array.isArray(array) ? array.filter(filterFn) : [];\n  };\n  const fetchBusinessData = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const response = await fetch(`${API_BASE}/api/business-data`);\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      const result = await response.json();\n      if (result.success) {\n        var _result$data, _result$data2, _result$data3, _result$data4, _result$data5, _result$data6;\n        // SAFE: Ensure all arrays exist with fallbacks\n        const safeData = {\n          employees: Array.isArray((_result$data = result.data) === null || _result$data === void 0 ? void 0 : _result$data.employees) ? result.data.employees : [],\n          clients: Array.isArray((_result$data2 = result.data) === null || _result$data2 === void 0 ? void 0 : _result$data2.clients) ? result.data.clients : [],\n          sites: Array.isArray((_result$data3 = result.data) === null || _result$data3 === void 0 ? void 0 : _result$data3.sites) ? result.data.sites : [],\n          companyInfo: ((_result$data4 = result.data) === null || _result$data4 === void 0 ? void 0 : _result$data4.companyInfo) || {},\n          platformModules: Array.isArray((_result$data5 = result.data) === null || _result$data5 === void 0 ? void 0 : _result$data5.platformModules) ? result.data.platformModules : [],\n          realTimeMetrics: ((_result$data6 = result.data) === null || _result$data6 === void 0 ? void 0 : _result$data6.realTimeMetrics) || {},\n          summary: result.summary || {}\n        };\n        setBusinessData(safeData);\n        console.log('Business data loaded safely:', {\n          employees: safeData.employees.length,\n          clients: safeData.clients.length,\n          sites: safeData.sites.length,\n          revenue: safeData.clients.reduce((sum, c) => sum + (c.monthly_revenue || 0), 0)\n        });\n      } else {\n        throw new Error(result.error || 'Failed to fetch business data');\n      }\n    } catch (err) {\n      console.error('Business data fetch error:', err);\n      setError(err.message);\n      // SAFE: Keep existing data structure even on error\n      setBusinessData(prev => ({\n        employees: Array.isArray(prev.employees) ? prev.employees : [],\n        clients: Array.isArray(prev.clients) ? prev.clients : [],\n        sites: Array.isArray(prev.sites) ? prev.sites : [],\n        companyInfo: prev.companyInfo || {},\n        platformModules: Array.isArray(prev.platformModules) ? prev.platformModules : [],\n        realTimeMetrics: prev.realTimeMetrics || {}\n      }));\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchBusinessData();\n  }, [fetchBusinessData]);\n\n  // SAFE: Derived metrics with array safety checks\n  const derivedMetrics = {\n    activeEmployees: safeArrayFilter(businessData.employees, e => e.status === 'Active'),\n    totalClients: ((_businessData$clients = businessData.clients) === null || _businessData$clients === void 0 ? void 0 : _businessData$clients.length) || 0,\n    activeGuards: safeArrayFilter(businessData.employees, e => e.status === 'Active' && (e.role || '').toLowerCase().includes('guard')),\n    supervisors: safeArrayFilter(businessData.employees, e => e.status === 'Active' && (e.role || '').toLowerCase().includes('supervisor')),\n    monthlyRevenue: Array.isArray(businessData.clients) ? businessData.clients.reduce((sum, client) => sum + (client.monthly_revenue || 0), 0) : 0,\n    averageHourlyRate: (() => {\n      const activeEmp = safeArrayFilter(businessData.employees, e => e.status === 'Active' && e.hourlyRate);\n      return activeEmp.length > 0 ? activeEmp.reduce((sum, e) => sum + (e.hourlyRate || 0), 0) / activeEmp.length : 0;\n    })(),\n    totalModules: ((_businessData$platfor = businessData.platformModules) === null || _businessData$platfor === void 0 ? void 0 : _businessData$platfor.length) || 3\n  };\n\n  // Create analytics structure that dashboard components expect\n  const analyticsData = {\n    ...businessData,\n    analytics: {\n      monthlyRevenue: derivedMetrics.monthlyRevenue,\n      totalRevenue: derivedMetrics.monthlyRevenue,\n      totalClients: derivedMetrics.totalClients,\n      totalSites: ((_businessData$sites = businessData.sites) === null || _businessData$sites === void 0 ? void 0 : _businessData$sites.length) || derivedMetrics.totalClients,\n      activeEmployees: derivedMetrics.activeEmployees.length,\n      // DEBUG: Log employee statuses before calculating employeesOnLeave\n      employeesOnLeave: (() => {\n        console.log('Employee statuses:', businessData.employees.map(e => `${e.name}: ${e.status}`));\n        const onLeaveEmployees = safeArrayFilter(businessData.employees, e => e.status === 'On Leave');\n        console.log('Employees on leave:', onLeaveEmployees.map(e => e.name));\n        return onLeaveEmployees.length;\n      })(),\n      averageHourlyRate: derivedMetrics.averageHourlyRate,\n      // Calculate business health\n      businessHealth: (() => {\n        if (!derivedMetrics.monthlyRevenue || derivedMetrics.activeGuards.length === 0) {\n          return 'Unknown';\n        }\n        const revenuePerGuard = derivedMetrics.monthlyRevenue / derivedMetrics.activeGuards.length;\n        if (revenuePerGuard > 4000) return 'Excellent';\n        if (revenuePerGuard > 2500) return 'Good';\n        return 'Needs Attention';\n      })(),\n      // Calculate profit margin\n      profitMargin: (() => {\n        const totalLaborCost = derivedMetrics.activeEmployees.reduce((sum, e) => sum + (e.hourlyRate || 25) * 160, 0);\n        if (derivedMetrics.monthlyRevenue === 0) return 0;\n        const profit = derivedMetrics.monthlyRevenue - totalLaborCost;\n        return profit / derivedMetrics.monthlyRevenue * 100;\n      })(),\n      // Role breakdowns\n      roleBreakdowns: {\n        drivers: safeArrayFilter(businessData.employees, e => {\n          const role = (e.role || '').toLowerCase();\n          return e.status === 'Active' && (role.includes('patrol') || role.includes('driver') || role.includes('mobile'));\n        }).length,\n        staticGuards: derivedMetrics.activeGuards.length,\n        supervisors: derivedMetrics.supervisors.length\n      },\n      // Client details\n      clientDetails: ((_businessData$clients2 = businessData.clients) === null || _businessData$clients2 === void 0 ? void 0 : _businessData$clients2.map(client => ({\n        name: client.name,\n        revenue: client.monthly_revenue || 0,\n        type: client.type || 'Unknown'\n      })).sort((a, b) => b.revenue - a.revenue)) || [],\n      // Profit breakdown\n      profitBreakdown: (() => {\n        const totalRevenue = derivedMetrics.monthlyRevenue;\n        const totalLaborCosts = derivedMetrics.activeEmployees.reduce((sum, e) => sum + (e.hourlyRate || 25) * 160, 0);\n        const grossProfit = totalRevenue - totalLaborCosts;\n        const profitMargin = totalRevenue > 0 ? grossProfit / totalRevenue * 100 : 0;\n        return {\n          totalRevenue,\n          totalLaborCosts,\n          grossProfit,\n          profitMargin\n        };\n      })(),\n      grossProfit: (() => {\n        const revenue = derivedMetrics.monthlyRevenue;\n        const laborCosts = derivedMetrics.activeEmployees.reduce((sum, e) => sum + (e.hourlyRate || 25) * 160, 0);\n        return Math.max(0, revenue - laborCosts);\n      })()\n    }\n  };\n  const refreshData = useCallback(async () => {\n    console.log('Dashboard refresh triggered - fetching fresh data...');\n    await fetchBusinessData();\n  }, [fetchBusinessData]);\n  return {\n    businessData: analyticsData,\n    // Pass the enhanced data with analytics\n    isLoading,\n    error,\n    refreshData,\n    derivedMetrics: {\n      ...derivedMetrics,\n      totalModules: ((_businessData$platfor2 = businessData.platformModules) === null || _businessData$platfor2 === void 0 ? void 0 : _businessData$platfor2.length) || 3\n    },\n    // SAFE: Helper methods for components\n    safeEmployees: Array.isArray(businessData.employees) ? businessData.employees : [],\n    safeClients: Array.isArray(businessData.clients) ? businessData.clients : [],\n    safeSites: Array.isArray(businessData.sites) ? businessData.sites : []\n  };\n};\n_s(useBusinessData, \"2TzuCccZ32fgDR+WE7qkYzYv/tQ=\");","map":{"version":3,"names":["useState","useEffect","useCallback","API_BASE","process","env","REACT_APP_API_URL","useBusinessData","_s","_businessData$clients","_businessData$platfor","_businessData$sites","_businessData$clients2","_businessData$platfor2","businessData","setBusinessData","employees","clients","sites","companyInfo","platformModules","realTimeMetrics","isLoading","setIsLoading","error","setError","safeArrayFilter","array","filterFn","Array","isArray","filter","fetchBusinessData","response","fetch","ok","Error","status","statusText","result","json","success","_result$data","_result$data2","_result$data3","_result$data4","_result$data5","_result$data6","safeData","data","summary","console","log","length","revenue","reduce","sum","c","monthly_revenue","err","message","prev","derivedMetrics","activeEmployees","e","totalClients","activeGuards","role","toLowerCase","includes","supervisors","monthlyRevenue","client","averageHourlyRate","activeEmp","hourlyRate","totalModules","analyticsData","analytics","totalRevenue","totalSites","employeesOnLeave","map","name","onLeaveEmployees","businessHealth","revenuePerGuard","profitMargin","totalLaborCost","profit","roleBreakdowns","drivers","staticGuards","clientDetails","type","sort","a","b","profitBreakdown","totalLaborCosts","grossProfit","laborCosts","Math","max","refreshData","safeEmployees","safeClients","safeSites"],"sources":["C:/Users/onetr/OneDrive/Desktop/universal-business-platform/universal-business-platform/frontend/src/hooks/useBusinessData.js"],"sourcesContent":["// src/hooks/useBusinessData.js - Complete File with Debug Logging\r\nimport { useState, useEffect, useCallback } from 'react';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_URL || 'http://localhost:3000';\r\n\r\nexport const useBusinessData = () => {\r\n  const [businessData, setBusinessData] = useState({\r\n    employees: [], // Default to empty array\r\n    clients: [],   // Default to empty array\r\n    sites: [],     // Default to empty array\r\n    companyInfo: {},\r\n    platformModules: [],\r\n    realTimeMetrics: {}\r\n  });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // SAFE: Helper function to ensure arrays exist\r\n  const safeArrayFilter = (array, filterFn) => {\r\n    return Array.isArray(array) ? array.filter(filterFn) : [];\r\n  };\r\n\r\n  const fetchBusinessData = useCallback(async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await fetch(`${API_BASE}/api/business-data`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n      \r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        // SAFE: Ensure all arrays exist with fallbacks\r\n        const safeData = {\r\n          employees: Array.isArray(result.data?.employees) ? result.data.employees : [],\r\n          clients: Array.isArray(result.data?.clients) ? result.data.clients : [],\r\n          sites: Array.isArray(result.data?.sites) ? result.data.sites : [],\r\n          companyInfo: result.data?.companyInfo || {},\r\n          platformModules: Array.isArray(result.data?.platformModules) ? result.data.platformModules : [],\r\n          realTimeMetrics: result.data?.realTimeMetrics || {},\r\n          summary: result.summary || {}\r\n        };\r\n        \r\n        setBusinessData(safeData);\r\n        console.log('Business data loaded safely:', {\r\n          employees: safeData.employees.length,\r\n          clients: safeData.clients.length,\r\n          sites: safeData.sites.length,\r\n          revenue: safeData.clients.reduce((sum, c) => sum + (c.monthly_revenue || 0), 0)\r\n        });\r\n      } else {\r\n        throw new Error(result.error || 'Failed to fetch business data');\r\n      }\r\n    } catch (err) {\r\n      console.error('Business data fetch error:', err);\r\n      setError(err.message);\r\n      // SAFE: Keep existing data structure even on error\r\n      setBusinessData(prev => ({\r\n        employees: Array.isArray(prev.employees) ? prev.employees : [],\r\n        clients: Array.isArray(prev.clients) ? prev.clients : [],\r\n        sites: Array.isArray(prev.sites) ? prev.sites : [],\r\n        companyInfo: prev.companyInfo || {},\r\n        platformModules: Array.isArray(prev.platformModules) ? prev.platformModules : [],\r\n        realTimeMetrics: prev.realTimeMetrics || {}\r\n      }));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchBusinessData();\r\n  }, [fetchBusinessData]);\r\n\r\n  // SAFE: Derived metrics with array safety checks\r\n  const derivedMetrics = {\r\n    activeEmployees: safeArrayFilter(businessData.employees, e => e.status === 'Active'),\r\n    totalClients: businessData.clients?.length || 0,\r\n    activeGuards: safeArrayFilter(businessData.employees, e => \r\n      e.status === 'Active' && (e.role || '').toLowerCase().includes('guard')\r\n    ),\r\n    supervisors: safeArrayFilter(businessData.employees, e => \r\n      e.status === 'Active' && (e.role || '').toLowerCase().includes('supervisor')\r\n    ),\r\n    monthlyRevenue: Array.isArray(businessData.clients) \r\n      ? businessData.clients.reduce((sum, client) => sum + (client.monthly_revenue || 0), 0)\r\n      : 0,\r\n    averageHourlyRate: (() => {\r\n      const activeEmp = safeArrayFilter(businessData.employees, e => e.status === 'Active' && e.hourlyRate);\r\n      return activeEmp.length > 0 \r\n        ? activeEmp.reduce((sum, e) => sum + (e.hourlyRate || 0), 0) / activeEmp.length \r\n        : 0;\r\n    })(),\r\n    totalModules: businessData.platformModules?.length || 3\r\n  };\r\n\r\n  // Create analytics structure that dashboard components expect\r\n  const analyticsData = {\r\n    ...businessData,\r\n    analytics: {\r\n      monthlyRevenue: derivedMetrics.monthlyRevenue,\r\n      totalRevenue: derivedMetrics.monthlyRevenue,\r\n      totalClients: derivedMetrics.totalClients,\r\n      totalSites: businessData.sites?.length || derivedMetrics.totalClients,\r\n      activeEmployees: derivedMetrics.activeEmployees.length,\r\n      \r\n      // DEBUG: Log employee statuses before calculating employeesOnLeave\r\n      employeesOnLeave: (() => {\r\n        console.log('Employee statuses:', businessData.employees.map(e => `${e.name}: ${e.status}`));\r\n        const onLeaveEmployees = safeArrayFilter(businessData.employees, e => e.status === 'On Leave');\r\n        console.log('Employees on leave:', onLeaveEmployees.map(e => e.name));\r\n        return onLeaveEmployees.length;\r\n      })(),\r\n      \r\n      averageHourlyRate: derivedMetrics.averageHourlyRate,\r\n      \r\n      // Calculate business health\r\n      businessHealth: (() => {\r\n        if (!derivedMetrics.monthlyRevenue || derivedMetrics.activeGuards.length === 0) {\r\n          return 'Unknown';\r\n        }\r\n        const revenuePerGuard = derivedMetrics.monthlyRevenue / derivedMetrics.activeGuards.length;\r\n        if (revenuePerGuard > 4000) return 'Excellent';\r\n        if (revenuePerGuard > 2500) return 'Good';\r\n        return 'Needs Attention';\r\n      })(),\r\n      \r\n      // Calculate profit margin\r\n      profitMargin: (() => {\r\n        const totalLaborCost = derivedMetrics.activeEmployees\r\n          .reduce((sum, e) => sum + ((e.hourlyRate || 25) * 160), 0);\r\n        if (derivedMetrics.monthlyRevenue === 0) return 0;\r\n        const profit = derivedMetrics.monthlyRevenue - totalLaborCost;\r\n        return (profit / derivedMetrics.monthlyRevenue) * 100;\r\n      })(),\r\n      \r\n      // Role breakdowns\r\n      roleBreakdowns: {\r\n        drivers: safeArrayFilter(businessData.employees, e => {\r\n          const role = (e.role || '').toLowerCase();\r\n          return e.status === 'Active' && (role.includes('patrol') || role.includes('driver') || role.includes('mobile'));\r\n        }).length,\r\n        staticGuards: derivedMetrics.activeGuards.length,\r\n        supervisors: derivedMetrics.supervisors.length\r\n      },\r\n      \r\n      // Client details\r\n      clientDetails: businessData.clients?.map(client => ({\r\n        name: client.name,\r\n        revenue: client.monthly_revenue || 0,\r\n        type: client.type || 'Unknown'\r\n      })).sort((a, b) => b.revenue - a.revenue) || [],\r\n      \r\n      // Profit breakdown\r\n      profitBreakdown: (() => {\r\n        const totalRevenue = derivedMetrics.monthlyRevenue;\r\n        const totalLaborCosts = derivedMetrics.activeEmployees\r\n          .reduce((sum, e) => sum + ((e.hourlyRate || 25) * 160), 0);\r\n        const grossProfit = totalRevenue - totalLaborCosts;\r\n        const profitMargin = totalRevenue > 0 ? (grossProfit / totalRevenue) * 100 : 0;\r\n        \r\n        return {\r\n          totalRevenue,\r\n          totalLaborCosts,\r\n          grossProfit,\r\n          profitMargin\r\n        };\r\n      })(),\r\n      \r\n      grossProfit: (() => {\r\n        const revenue = derivedMetrics.monthlyRevenue;\r\n        const laborCosts = derivedMetrics.activeEmployees\r\n          .reduce((sum, e) => sum + ((e.hourlyRate || 25) * 160), 0);\r\n        return Math.max(0, revenue - laborCosts);\r\n      })()\r\n    }\r\n  };\r\n\r\n  const refreshData = useCallback(async () => {\r\n    console.log('Dashboard refresh triggered - fetching fresh data...');\r\n    await fetchBusinessData();\r\n  }, [fetchBusinessData]);\r\n\r\n  return {\r\n    businessData: analyticsData,  // Pass the enhanced data with analytics\r\n    isLoading,\r\n    error,\r\n    refreshData,\r\n    derivedMetrics: {\r\n      ...derivedMetrics,\r\n      totalModules: businessData.platformModules?.length || 3\r\n    },\r\n    // SAFE: Helper methods for components\r\n    safeEmployees: Array.isArray(businessData.employees) ? businessData.employees : [],\r\n    safeClients: Array.isArray(businessData.clients) ? businessData.clients : [],\r\n    safeSites: Array.isArray(businessData.sites) ? businessData.sites : []\r\n  };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
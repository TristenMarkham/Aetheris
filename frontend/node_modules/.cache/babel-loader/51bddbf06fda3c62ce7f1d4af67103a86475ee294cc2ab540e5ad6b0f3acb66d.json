{"ast":null,"code":"// src/utils/helpers.js\nexport const formatNumber = value => {\n  if (typeof value !== 'number' || isNaN(value)) {\n    return '0';\n  }\n  return value.toLocaleString();\n};\nexport const formatCurrency = value => {\n  if (typeof value !== 'number' || isNaN(value)) {\n    return '$0';\n  }\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(value);\n};\nexport const formatDate = (date, options = {}) => {\n  const {\n    dateStyle = 'medium',\n    timeStyle,\n    includeTime = false\n  } = options;\n  if (!date) return 'Never';\n  const dateObj = typeof date === 'string' ? new Date(date) : date;\n  if (isNaN(dateObj.getTime())) {\n    return 'Invalid Date';\n  }\n  const formatOptions = {\n    dateStyle\n  };\n  if (includeTime && timeStyle) {\n    formatOptions.timeStyle = timeStyle;\n  }\n  return new Intl.DateTimeFormat('en-US', formatOptions).format(dateObj);\n};","map":{"version":3,"names":["formatNumber","value","isNaN","toLocaleString","formatCurrency","Intl","NumberFormat","style","currency","format","formatDate","date","options","dateStyle","timeStyle","includeTime","dateObj","Date","getTime","formatOptions","DateTimeFormat"],"sources":["C:/Users/onetr/OneDrive/Desktop/universal-business-platform/universal-business-platform/frontend/src/utils/helpers.js"],"sourcesContent":["// src/utils/helpers.js\r\nexport const formatNumber = (value) => {\r\n  if (typeof value !== 'number' || isNaN(value)) {\r\n    return '0';\r\n  }\r\n  return value.toLocaleString();\r\n};\r\n\r\nexport const formatCurrency = (value) => {\r\n  if (typeof value !== 'number' || isNaN(value)) {\r\n    return '$0';\r\n  }\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD'\r\n  }).format(value);\r\n};\r\n\r\nexport const formatDate = (date, options = {}) => {\r\n  const {\r\n    dateStyle = 'medium',\r\n    timeStyle,\r\n    includeTime = false\r\n  } = options;\r\n\r\n  if (!date) return 'Never';\r\n\r\n  const dateObj = typeof date === 'string' ? new Date(date) : date;\r\n  \r\n  if (isNaN(dateObj.getTime())) {\r\n    return 'Invalid Date';\r\n  }\r\n\r\n  const formatOptions = { dateStyle };\r\n  if (includeTime && timeStyle) {\r\n    formatOptions.timeStyle = timeStyle;\r\n  }\r\n\r\n  return new Intl.DateTimeFormat('en-US', formatOptions).format(dateObj);\r\n};"],"mappings":"AAAA;AACA,OAAO,MAAMA,YAAY,GAAIC,KAAK,IAAK;EACrC,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIC,KAAK,CAACD,KAAK,CAAC,EAAE;IAC7C,OAAO,GAAG;EACZ;EACA,OAAOA,KAAK,CAACE,cAAc,CAAC,CAAC;AAC/B,CAAC;AAED,OAAO,MAAMC,cAAc,GAAIH,KAAK,IAAK;EACvC,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIC,KAAK,CAACD,KAAK,CAAC,EAAE;IAC7C,OAAO,IAAI;EACb;EACA,OAAO,IAAII,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;IACpCC,KAAK,EAAE,UAAU;IACjBC,QAAQ,EAAE;EACZ,CAAC,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC;AAClB,CAAC;AAED,OAAO,MAAMS,UAAU,GAAGA,CAACC,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EAChD,MAAM;IACJC,SAAS,GAAG,QAAQ;IACpBC,SAAS;IACTC,WAAW,GAAG;EAChB,CAAC,GAAGH,OAAO;EAEX,IAAI,CAACD,IAAI,EAAE,OAAO,OAAO;EAEzB,MAAMK,OAAO,GAAG,OAAOL,IAAI,KAAK,QAAQ,GAAG,IAAIM,IAAI,CAACN,IAAI,CAAC,GAAGA,IAAI;EAEhE,IAAIT,KAAK,CAACc,OAAO,CAACE,OAAO,CAAC,CAAC,CAAC,EAAE;IAC5B,OAAO,cAAc;EACvB;EAEA,MAAMC,aAAa,GAAG;IAAEN;EAAU,CAAC;EACnC,IAAIE,WAAW,IAAID,SAAS,EAAE;IAC5BK,aAAa,CAACL,SAAS,GAAGA,SAAS;EACrC;EAEA,OAAO,IAAIT,IAAI,CAACe,cAAc,CAAC,OAAO,EAAED,aAAa,CAAC,CAACV,MAAM,CAACO,OAAO,CAAC;AACxE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
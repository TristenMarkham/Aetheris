{"ast":null,"code":"// src/services/apiService.js\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';\nclass ApiService {\n  constructor() {\n    this.baseURL = API_BASE_URL;\n  }\n\n  // Generic request handler\n  async request(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers\n      },\n      ...options\n    };\n    try {\n      const response = await fetch(url, config);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('API request failed:', error);\n      throw error;\n    }\n  }\n\n  // Business Data APIs\n  async getBusinessData() {\n    return this.request('/api/business-data');\n  }\n  async updateBusinessData(data) {\n    return this.request('/api/business-data', {\n      method: 'PUT',\n      body: JSON.stringify(data)\n    });\n  }\n\n  // Employee APIs\n  async getEmployees() {\n    return this.request('/api/employees');\n  }\n  async createEmployee(employeeData) {\n    return this.request('/api/employees', {\n      method: 'POST',\n      body: JSON.stringify(employeeData)\n    });\n  }\n  async updateEmployee(id, employeeData) {\n    return this.request(`/api/employees/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(employeeData)\n    });\n  }\n  async deleteEmployee(id) {\n    return this.request(`/api/employees/${id}`, {\n      method: 'DELETE'\n    });\n  }\n\n  // Chat APIs\n  async sendChatMessage(message) {\n    return this.request('/api/chat', {\n      method: 'POST',\n      body: JSON.stringify({\n        message\n      })\n    });\n  }\n  async getChatHistory() {\n    return this.request('/api/chat/history');\n  }\n\n  // Module APIs\n  async getModules() {\n    return this.request('/api/modules');\n  }\n  async createModule(moduleData) {\n    return this.request('/api/modules', {\n      method: 'POST',\n      body: JSON.stringify(moduleData)\n    });\n  }\n  async deleteModule(id) {\n    return this.request(`/api/modules/${id}`, {\n      method: 'DELETE'\n    });\n  }\n\n  // File Upload APIs\n  async uploadFile(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    return this.request('/api/upload', {\n      method: 'POST',\n      headers: {},\n      // Let browser set Content-Type for FormData\n      body: formData\n    });\n  }\n\n  // Analytics APIs\n  async getAnalytics() {\n    return this.request('/api/analytics');\n  }\n  async getPerformanceMetrics() {\n    return this.request('/api/metrics');\n  }\n}\n\n// Export singleton instance\nexport default new ApiService();","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","constructor","baseURL","request","endpoint","options","url","config","headers","response","fetch","ok","Error","status","json","error","console","getBusinessData","updateBusinessData","data","method","body","JSON","stringify","getEmployees","createEmployee","employeeData","updateEmployee","id","deleteEmployee","sendChatMessage","message","getChatHistory","getModules","createModule","moduleData","deleteModule","uploadFile","file","formData","FormData","append","getAnalytics","getPerformanceMetrics"],"sources":["C:/Users/onetr/OneDrive/Desktop/universal-business-platform/universal-business-platform/frontend/src/services/apiService.js"],"sourcesContent":["// src/services/apiService.js\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';\r\n\r\nclass ApiService {\r\n  constructor() {\r\n    this.baseURL = API_BASE_URL;\r\n  }\r\n\r\n  // Generic request handler\r\n  async request(endpoint, options = {}) {\r\n    const url = `${this.baseURL}${endpoint}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...options.headers,\r\n      },\r\n      ...options,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, config);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('API request failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Business Data APIs\r\n  async getBusinessData() {\r\n    return this.request('/api/business-data');\r\n  }\r\n\r\n  async updateBusinessData(data) {\r\n    return this.request('/api/business-data', {\r\n      method: 'PUT',\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n\r\n  // Employee APIs\r\n  async getEmployees() {\r\n    return this.request('/api/employees');\r\n  }\r\n\r\n  async createEmployee(employeeData) {\r\n    return this.request('/api/employees', {\r\n      method: 'POST',\r\n      body: JSON.stringify(employeeData),\r\n    });\r\n  }\r\n\r\n  async updateEmployee(id, employeeData) {\r\n    return this.request(`/api/employees/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(employeeData),\r\n    });\r\n  }\r\n\r\n  async deleteEmployee(id) {\r\n    return this.request(`/api/employees/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n  }\r\n\r\n  // Chat APIs\r\n  async sendChatMessage(message) {\r\n    return this.request('/api/chat', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ message }),\r\n    });\r\n  }\r\n\r\n  async getChatHistory() {\r\n    return this.request('/api/chat/history');\r\n  }\r\n\r\n  // Module APIs\r\n  async getModules() {\r\n    return this.request('/api/modules');\r\n  }\r\n\r\n  async createModule(moduleData) {\r\n    return this.request('/api/modules', {\r\n      method: 'POST',\r\n      body: JSON.stringify(moduleData),\r\n    });\r\n  }\r\n\r\n  async deleteModule(id) {\r\n    return this.request(`/api/modules/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n  }\r\n\r\n  // File Upload APIs\r\n  async uploadFile(file) {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    return this.request('/api/upload', {\r\n      method: 'POST',\r\n      headers: {}, // Let browser set Content-Type for FormData\r\n      body: formData,\r\n    });\r\n  }\r\n\r\n  // Analytics APIs\r\n  async getAnalytics() {\r\n    return this.request('/api/analytics');\r\n  }\r\n\r\n  async getPerformanceMetrics() {\r\n    return this.request('/api/metrics');\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport default new ApiService(); \r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}